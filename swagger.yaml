basePath: https://client.deepspacesync.com/api/v1/
info:
  description: Deep Space API
  title: Deep Space API
  version: 2.0.0
paths:
  /v1/actions/associations:
    get:
      operationId: v1_getAssociations
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get associations for a user
      tags:
      - Actions
      x-min-permissions: isRevitUser
  /v1/jobs/{job_id}:
    post:
      operationId: v1_startJobGlobal
      parameters:
      - in: path
        name: job_id
        required: true
        type: integer
      responses:
        202:
          description: Job started, returns job guid
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Start a new job at global-level
      tags:
      - Jobs
  /v1/login:
    post:
      description: Validates Deep Space username and password and returns JWT token
        for API
      operationId: login
      parameters:
      - in: header
        name: username
        required: false
        type: string
      - in: header
        name: password
        required: false
        type: string
      - in: header
        name: region
        required: false
        type: string
      - in: header
        name: token
        required: false
        type: string
      responses:
        200:
          description: JWT
          schema:
            type: string
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      summary: Login to get JWT token
      tags:
      - Authentication
  /v1/migrations/{migrationId}:
    post:
      operationId: v1_runMigration
      parameters:
      - in: path
        name: migrationId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            functiondata:
              description: The data to pass to the migration function (see migration
                documentation)
              type: object
            region:
              description: The region of the workspace
              type: string
            workspace:
              description: The workspace to run the migration on
              type: string
          required:
          - region
          - workspace
          - functiondata
          type: object
      responses:
        207:
          description: Migration ran, see response for details
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Run a schema migration
      tags:
      - Migrations
      x-min-permissions: admin
  /v1/powerbi-xmla/system-tables:
    get:
      operationId: v2_uploadSystemTables
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Retrieve system tables from Power BI XMLA
      tags:
      - Power BI
      x-min-permissions: admin
  /v1/regions:
    get:
      description: Returns list of api-supported regions
      operationId: v1_getRegions
      parameters:
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        required: false
        type: string
      responses:
        200:
          description: list of supported regions
      summary: Get supported regions
      tags:
      - Info
  /v1/secret/{secretName}:
    get:
      operationId: v1_getSecret
      parameters:
      - in: path
        name: secretName
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get a secret
      tags:
      - Admin
      x-min-permissions: admin
  /v1/users:
    post:
      description: Creates a user if not already exists in Outseta only
      operationId: v1_postOutsetauser
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            email:
              description: The email of the user
              type: string
            name:
              description: The name of the user like First Last
              type: string
          required:
          - email
          - name
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create user in Outseta
      tags:
      - Users
      x-min-permissions: admin
  /v1/workspaces:
    get:
      description: Returns all workspaces and projects a user has access to with optional
        parameters for extra info
      operationId: v1_getWorkspaces
      parameters:
      - description: Includes additional details in response
        in: query
        name: includeDetails
        required: false
        type: boolean
      - description: Includes permissions in response
        in: query
        name: includePermissions
        required: false
        type: boolean
      responses:
        200:
          description: Successful response with a list of workspaces and projects
          schema:
            items:
              properties:
                projects:
                  items:
                    properties:
                      project_id:
                        example: 1
                        type: integer
                      project_name:
                        example: My Project Name
                        type: string
                    type: object
                  type: array
                workspace:
                  description: ds_workspace_name corresponding to dataset name
                  example: ds_12345678_9123_4567_8912_123456789123
                  type: string
                workspace_name:
                  example: My Workspace Name
                  type: string
              type: object
            type: array
        204:
          description: No content to return
        400:
          description: Bad Request due to invalid parameters
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get list of workspaces and associated projects
      tags:
      - Info
  /v1/workspaces/{workspaceId}/companies:
    get:
      description: Returns all companies for a workspace
      operationId: v1_getWorkspaceCompanies
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get companies in a workspaces
      tags:
      - Companies
    post:
      consumes:
      - application/json
      description: Creates a new company in a workspace. Requires workspace manager
        permissions
      operationId: v1_postWorkspaceCompanies
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            company_abbreviation:
              description: The abbreviation of the company name
              type: string
            company_name:
              description: The name of the company
              type: string
          required:
          - company_name
          - company_abbreviation
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create company in a workspaces
      tags:
      - Companies
  /v1/workspaces/{workspaceId}/companies/{companyId}:
    patch:
      consumes:
      - application/json
      operationId: v1_patchWorkspaceCompanies
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: companyId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            company_abbreviation:
              description: The abbreviation of the company name
              type: string
            company_name:
              description: The name of the company
              type: string
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Update a company
      tags:
      - Companies
  /v1/workspaces/{workspaceId}/jobs/{job_id}:
    post:
      operationId: v1_startJobWorkspace
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: job_id
        required: true
        type: integer
      responses:
        202:
          description: Job started, returns job guid
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Start a new job at workpace-level
      tags:
      - Jobs
  /v1/workspaces/{workspaceId}/powerbi:
    post:
      operationId: v1_postPowerBiWorkspace
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create a new power bi workspace
      tags:
      - Power BI
      x-min-permissions: admin
  /v1/workspaces/{workspaceId}/projects:
    get:
      operationId: v1_getProjects
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - description: Include details of projects
        in: query
        name: includeDetails
        required: false
        type: boolean
      responses:
        200:
          description: Project details
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get projects in a workspace
      tags:
      - Info
    post:
      consumes:
      - application/json
      operationId: v1_postProject
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            billing_stage:
              description: The billing stage of the project (Outseta)
              type: string
            ds_license_type:
              description: The license type of the project
              type: string
            hosting_region:
              description: The hosting region of the project
              type: string
            primary_contact_email:
              description: Primary contact (Outseta) for the project
              type: string
            project_name:
              description: The name of the project
              type: string
            project_weekly_notifications:
              description: dictionary of days of the week as bools
              properties:
                Friday:
                  type: boolean
                Monday:
                  type: boolean
                Saturday:
                  type: boolean
                Sunday:
                  type: boolean
                Thursday:
                  type: boolean
                Tuesday:
                  type: boolean
                Wednesday:
                  type: boolean
              type: object
          required:
          - project_name
          - primary_contact_email
          - billing_stage
          - hosting_region
          - ds_license_type
          type: object
      responses:
        201:
          description: Project successfully created
        400:
          description: Bad Request
        401:
          description: Insufficent permissions to create project
        403:
          description: Forbidden to create project
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create a new project
      tags:
      - Project
  /v1/workspaces/{workspaceId}/projects/{projectId}:
    delete:
      consumes:
      - application/json
      operationId: v1_archiveProject
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: string
      responses:
        201:
          description: Project successfully archived
        400:
          description: Bad Request
        401:
          description: Insufficent permissions to archive project
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Archive a project
      tags:
      - Project
    get:
      operationId: v1_getProject
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: string
      - description: Include details of the project
        in: query
        name: includeDetails
        required: false
        type: boolean
      responses:
        200:
          description: A successful response
        400:
          description: Bad Request
        401:
          description: Insufficent permissions
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get project
      tags:
      - Project
    patch:
      consumes:
      - application/json
      operationId: v1_updateProject
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            project_name:
              description: Name for the project
              type: string
          type: object
      responses:
        201:
          description: Project successfully archived
        400:
          description: Bad Request
        401:
          description: Insufficent permissions to archive project
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Update a project
      tags:
      - Project
  /v1/workspaces/{workspaceId}/projects/{projectId}/actions:
    get:
      operationId: v1_getActions
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: query
        name: currentApp
        required: false
        type: string
      responses:
        200:
          description: Successfully created new action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get actions
      tags:
      - Actions
    patch:
      operationId: v1_updateAction
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            action_id:
              description: id of existing action to update
              type: integer
          required:
          - action_id
          type: object
      responses:
        200:
          description: Successfully updated action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Update fields in existing action
      tags:
      - Actions
    post:
      operationId: v1_createAction
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: Name of the action
        in: formData
        name: name
        required: true
        type: string
      - description: Description of the action
        in: formData
        name: description
        required: false
        type: string
      - description: Due date of the action, expected format 'yyyy-mm-dd'
        in: formData
        name: dueDate
        required: false
        type: string
      - description: Rating of the action - "Low", "Medium", "High"
        in: formData
        name: rating
        required: false
        type: string
      - description: App that the action was created from
        in: formData
        name: currentApp
        required: false
        type: string
      - description: A JSON string representing a list of attachment objects. Each
          object must contain a `cde_id` property.
        in: formData
        name: attachments
        required: false
        type: string
      responses:
        200:
          description: Successfully created new action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create new action
      tags:
      - Actions
  /v1/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}:
    get:
      operationId: v1_getSingleAction
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      responses:
        200:
          description: Successfully got action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get an action
      tags:
      - Actions
    patch:
      operationId: v1_updateSingleAction
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: formData
        name: body
        required: true
        type: string
      responses:
        200:
          description: Successfully updated action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Update fields in existing action
      tags:
      - Actions
  /v1/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/associations/{associationIdentifier}:
    get:
      operationId: v1_getActionAssociation
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: path
        name: associationIdentifier
        required: true
        type: string
      - description: The association_source_table_key
        in: query
        name: association_source_table_key
        required: false
        type: string
      - description: The association_row_table_key
        in: query
        name: association_row_table_key
        required: false
        type: string
      - description: The association type
        in: query
        name: association_type
        required: false
        type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Find an association
      tags:
      - Actions
      x-min-permissions: isRevitUser
    post:
      operationId: v1_postActionAssociation
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: path
        name: associationIdentifier
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            association_row_table_key:
              description: The key for association row table
              type: string
            association_source_table_key:
              description: The key for association source table
              type: string
          type: object
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Add an association to an action
      tags:
      - Actions
      x-min-permissions: isRevitUser
  /v1/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/associations/{associationIdentifier}/{associationId}:
    delete:
      operationId: v1_deleteActionAssociation
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: path
        name: associationIdentifier
        required: true
        type: string
      - description: ID of the association to remove
        in: path
        name: associationId
        required: true
        type: integer
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Remove an existing association
      tags:
      - Actions
      x-min-permissions: isRevitUser
  /v1/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/attachments:
    get:
      operationId: v1_getActionAttachments
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      responses:
        200:
          description: Successfully got attachments
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get attachments for an action
      tags:
      - Actions
    post:
      operationId: v1_postActionAttachments
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            attachments:
              description: A list of attachment objects
              items:
                properties:
                  cde_id:
                    description: CDE id corresponding to file
                    type: integer
                required:
                - cde_id
                type: object
              type: array
          required:
          - attachments
          type: object
      responses:
        200:
          description: Successfully got attachments
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Add attachments to action
      tags:
      - Actions
  /v1/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/comments:
    get:
      operationId: v1_getActionComments
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: query
        name: withAttachments
        required: false
        type: boolean
      responses:
        200:
          description: Successfully got comments
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get comments for an action
      tags:
      - Actions
    post:
      operationId: v1_postActionComment
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            attachments:
              description: A list of attachment objects
              items:
                properties:
                  cde_id:
                    description: CDE id corresponding to file
                    type: integer
                required:
                - cde_id
                type: object
              type: array
            comment:
              description: The comment to add
              type: string
          required:
          - comment
          type: object
      responses:
        200:
          description: Successfully created comment
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create comment for an action
      tags:
      - Actions
  /v1/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/comments/{commentId}:
    get:
      operationId: v1_getActionComment
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: path
        name: commentId
        required: true
        type: integer
      - in: query
        name: withAttachments
        required: false
        type: boolean
      responses:
        200:
          description: Successfully got comment
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get comment for an action
      tags:
      - Actions
  /v1/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/comments/{commentId}/attachments:
    post:
      operationId: v1_postActionCommentAttachments
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: path
        name: commentId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            attachments:
              description: A list of attachment objects
              items:
                properties:
                  cde_id:
                    description: CDE id corresponding to file
                    type: integer
                required:
                - cde_id
                type: object
              type: array
          required:
          - attachments
          type: object
      responses:
        200:
          description: Successfully added attachment
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Add attachments to action coment
      tags:
      - Actions
  /v1/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/watchers:
    get:
      operationId: v1_getActionWatchers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      responses:
        200:
          description: Successfully got watchers
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get watchers for an action
      tags:
      - Actions
    post:
      operationId: v1_postActionWatcher
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            watcher:
              description: The email of the watcher
              type: string
          required:
          - watcher
          type: object
      responses:
        200:
          description: Successfully added watcher
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Add watcher to action
      tags:
      - Actions
  /v1/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/watchers/{watcherId}:
    delete:
      operationId: v1_deleteActionWatcher
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - description: email of watcher
        in: path
        name: watcherId
        required: true
        type: string
      responses:
        200:
          description: Successfully removed watcher
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Remove watcher from action
      tags:
      - Actions
  /v1/workspaces/{workspaceId}/projects/{projectId}/activity:
    get:
      operationId: v1_getUserActivity
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get User Activity
      tags:
      - Admin
  /v1/workspaces/{workspaceId}/projects/{projectId}/cde:
    get:
      operationId: v1_getCdeDocs
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Successfully returns CDE docs
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get CDE docs
      tags:
      - Get Data
    post:
      operationId: v1_postCde
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            cde_type:
              description: The type of CDE upload
              type: string
            files:
              description: A list of file objects
              items:
                properties:
                  filename:
                    description: The name of the file
                    type: string
                  filetype:
                    description: The type of the file
                    type: string
                required:
                - filename
                - filetype
                type: object
              type: array
          required:
          - files
          type: object
      responses:
        200:
          description: Successfully returns CDE urls
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get signed urls for cde
      tags:
      - Upload Data
  /v1/workspaces/{workspaceId}/projects/{projectId}/cde/process:
    post:
      operationId: v1_processCDE
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            files:
              description: A list of file objects
              items:
                properties:
                  cde_id:
                    description: The CDE ID of the file
                    type: integer
                required:
                - cde_id
                type: object
              type: array
          required:
          - files
          type: object
      responses:
        200:
          description: Successfully processed files
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Process files uploaded to CDE
      tags:
      - Upload Data
  /v1/workspaces/{workspaceId}/projects/{projectId}/cde/{cdeId}:
    delete:
      description: Invalidates a CDE entry for failed uploads
      operationId: v1_invalidateCdeEntry
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: cdeId
        required: true
        type: integer
      responses:
        200:
          description: Successfully invalidated CDE entry
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Invalidate CDE Entry
      tags:
      - Upload Data
    get:
      operationId: v1_getCdeFile
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: cdeId
        required: true
        type: integer
      responses:
        200:
          description: Successfully returns CDE url
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get signed url to access cde file
      tags:
      - Get Data
  /v1/workspaces/{workspaceId}/projects/{projectId}/cloudstoragebucket:
    get:
      description: Creates a new cloud storage bucket
      operationId: v1_getCloudStorageBucket
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Created Cloud Storage Bucket Name
          schema:
            type: string
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create a cloud storage bucket for single-use and return its name
      tags:
      - Navis Integration
    post:
      consumes:
      - application/json
      description: Creates a new cloud storage bucket for a project and initialises
        files expected to arrive in bucket.
      operationId: v1_postCloudStorageBucket
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            collectorKeys:
              description: A list of collector keys (strings)
            fileIds:
              description: A list of file ids (integers)
          required:
          - collectorKeys
          - fileIds
          type: object
      responses:
        200:
          description: Created Cloud Storage Bucket Name
          schema:
            type: string
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create a cloud storage bucket for expected files and return its name
      tags:
      - Navis Integration
  /v1/workspaces/{workspaceId}/projects/{projectId}/correspondence:
    post:
      operationId: v1_logCorrespondence
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            attachments:
              description: array of attachment objects
              items:
                properties:
                  cde_id:
                    description: The CDE ID corresponding to attachment
                    type: integer
                required:
                - cde_id
                type: object
              type: array
            date_sent:
              description: datetime in ISO format
              type: string
            html_content:
              description: The html content of the email
              type: string
            recipients:
              description: array of recipient objects
              items:
                properties:
                  email:
                    description: The email of the recipient
                    type: string
                  name:
                    description: The name of the recipient
                    type: string
                  type:
                    description: The type of recipient ('to', 'cc', 'bcc')
                    type: string
                required:
                - email
                - name
                - type
                type: object
              type: array
            sender_email:
              description: The email of the sender
              type: string
            sender_name:
              description: The name of the sender
              type: string
            subject:
              description: The email subject
              type: string
            text_content:
              description: The text content of the email
              type: string
          required:
          - subject
          - date_sent
          - text_content
          - html_content
          - sender_email
          - sender_name
          - recipients
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Log a correspondence in Deep Space
      tags:
      - Correspondence Logging
  /v1/workspaces/{workspaceId}/projects/{projectId}/data:
    get:
      operationId: v1_getDataClassifications
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: A list of supported data classifications
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get list of data classifications
      tags:
      - Upload Data
  /v1/workspaces/{workspaceId}/projects/{projectId}/data/any:
    post:
      consumes:
      - multipart/form-data
      description: Generic endpoint to upload csv data in any format to Deep Space
        in EAV format.
      operationId: v1_uploadanydata
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: The CSV file to upload
        in: formData
        name: file
        required: true
        type: string
      - description: The unique identifying name to categorise the data type
        in: formData
        name: data_classification
        required: true
        type: string
      responses:
        200:
          description: ingest_id of successfully loaded data
          schema:
            type: string
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Upload any data to Deep Space
      tags:
      - Upload Data
  /v1/workspaces/{workspaceId}/projects/{projectId}/data/{data_classification}:
    get:
      operationId: v1_getDataSources
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: The classification of the data
        in: path
        name: data_classification
        required: true
        type: string
      responses:
        200:
          description: A list of supported data sources
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get list of data sources
      tags:
      - Upload Data
  /v1/workspaces/{workspaceId}/projects/{projectId}/data/{data_classification}/{data_source}/{export_type}/{export_version}:
    post:
      consumes:
      - multipart/form-data
      operationId: v1_uploaddata
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: The classification of the data
        in: path
        name: data_classification
        required: true
        type: string
      - description: The source of the data
        in: path
        name: data_source
        required: true
        type: string
      - description: The type of export
        in: path
        name: export_type
        required: true
        type: string
      - description: The version of the export
        in: path
        name: export_version
        required: true
        type: string
      - description: The file to upload
        in: formData
        name: file
        required: true
        type: string
      responses:
        200:
          description: crawlId of successfully loaded data
          schema:
            type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized
        422:
          description: Unprocessable Entity
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Upload data to Deep Space from supported formats
      tags:
      - Upload Data
  /v1/workspaces/{workspaceId}/projects/{projectId}/files/{fileId}/navis/{collectorKey}:
    post:
      consumes:
      - application/json
      operationId: v1_navisfileupload
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: The file id
        in: path
        name: fileId
        required: true
        type: string
      - description: The collector key
        in: path
        name: collectorKey
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            bucket_name:
              description: The name of the cloud storage bucket
            crawlKey:
              description: The crawl key
            end_time:
              description: 'Datetime value of end of navis extraction - expected format:
                %d/%m/%Y %I:%M:%S %p'
            start_time:
              description: 'Datetime value of start of navis extraction - expected
                format: %d/%m/%Y %I:%M:%S %p'
          required:
          - start_time
          - end_time
          - bucket_name
          - crawlKey
          type: object
      responses:
        200:
          description: Successfully uploaded navis data
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Upload navis data to Deep Space at the file level
      tags:
      - Navis Integration
  /v1/workspaces/{workspaceId}/projects/{projectId}/integrations:
    get:
      operationId: v1_getProjectIntegrations
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get integrations on a project
      tags:
      - External Integrations
      x-min-permissions: isRevitUser
  /v1/workspaces/{workspaceId}/projects/{projectId}/integrations/{integrationId}:
    get:
      operationId: v1_getProjectIntegrationFields
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: integrationId
        required: true
        type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get mapping fields for an integration
      tags:
      - External Integrations
      x-min-permissions: isRevitUser
    patch:
      operationId: v1_patchProjectIntegration
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: integrationId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            mappingFieldValue1:
              description: The first mapping field value
              type: string
            mappingFieldValue2:
              description: The first mapping field value
              type: string
          required:
          - mappingFieldValue1
          - mappingFieldValue2
          type: object
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Update an integration configuration on a project
      tags:
      - External Integrations
      x-min-permissions: isRevitUser
    post:
      operationId: v1_postProjectIntegration
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: integrationId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          description: json object containing configuration values, differs depending
            on integration
          type: object
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Configure an integration on a project
      tags:
      - External Integrations
      x-min-permissions: isRevitUser
  /v1/workspaces/{workspaceId}/projects/{projectId}/integrations/{integrationId}/refresh:
    post:
      operationId: v1_postProjectIntegrationRefresh
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: integrationId
        required: true
        type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Refresh access token for an integration on a project
      tags:
      - External Integrations
      x-min-permissions: isRevitUser
  /v1/workspaces/{workspaceId}/projects/{projectId}/integrations/{integrationId}/sync:
    post:
      operationId: v1_postProjectIntegrationSync
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: integrationId
        required: true
        type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Sync data for an integration on a project
      tags:
      - External Integrations
      x-min-permissions: isRevitUser
  /v1/workspaces/{workspaceId}/projects/{projectId}/jobs:
    get:
      operationId: v1_getJobs
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: Get jobs associated with a specific app
        in: query
        name: app
        required: false
        type: string
      responses:
        202:
          description: Job started, returns job guid
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get supported jobs
      tags:
      - Jobs
  /v1/workspaces/{workspaceId}/projects/{projectId}/jobs/{job_guid}/status:
    get:
      operationId: v1_getJobStatus
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: job_guid
        required: true
        type: integer
      responses:
        202:
          description: Returns job status
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get job status
      tags:
      - Jobs
  /v1/workspaces/{workspaceId}/projects/{projectId}/jobs/{job_id}:
    post:
      operationId: v1_startJob
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: job_id
        required: true
        type: integer
      responses:
        202:
          description: Job started, returns job guid
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Start a new job
      tags:
      - Jobs
  /v1/workspaces/{workspaceId}/projects/{projectId}/link/{linkType}:
    get:
      operationId: v1_getProjectLinkType
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: linkType
        required: true
        type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get specified link type for a project
      tags:
      - Links
      x-min-permissions: isRevitUser
  /v1/workspaces/{workspaceId}/projects/{projectId}/logout/{userId}:
    post:
      description: Used to track logout times, mainly for concurrent seat licenses
      operationId: v1_logoutUser
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: email
        in: path
        name: userId
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Logout a user for a certain project
      tags:
      - Users
  /v1/workspaces/{workspaceId}/projects/{projectId}/milestone:
    get:
      operationId: v1_getMilestones
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: A list of current milestones
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get list of current milestones
      tags:
      - Milestones
    post:
      operationId: v1_postMilestone
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            discipline:
              description: The date of the milestone, expected format 'yyyy-mm-dd'
              type: string
            filename:
              description: The name of the milestone
              type: string
          required:
          - milestone_name
          - milestone_date
          type: object
      responses:
        201:
          description: Successfully created new milestone
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create new milestone
      tags:
      - Milestones
  /v1/workspaces/{workspaceId}/projects/{projectId}/navis/{collectorKey}:
    post:
      consumes:
      - application/json
      operationId: v1_navisprojectupload
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: The collector key
        in: path
        name: collectorKey
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            bucket_name:
              description: The name of the cloud storage bucket
            crawlKey:
              description: The crawl key
            end_time:
              description: 'Datetime value of end of navis extraction - expected format:
                %d/%m/%Y %I:%M:%S %p'
            start_time:
              description: 'Datetime value of start of navis extraction - expected
                format: %d/%m/%Y %I:%M:%S %p'
          required:
          - start_time
          - end_time
          - bucket_name
          - crawlKey
          type: object
      responses:
        200:
          description: Successfully uploaded navis data
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Upload navis data to Deep Space at the project level
      tags:
      - Navis Integration
  /v1/workspaces/{workspaceId}/projects/{projectId}/outseta:
    patch:
      consumes:
      - application/json
      operationId: v1_patchProjectOutseta
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            webflow_collection_id:
              description: The webflow collection id
              type: string
          required:
          - webflow_collection_id
          type: object
      responses:
        200:
          description: Account successfully updated
        400:
          description: Bad Request
        401:
          description: Insufficent permissions
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Update an outseta account
      tags:
      - Outseta
      x-min-permissions: admin
    post:
      consumes:
      - application/json
      operationId: v1_postProjectOutseta
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            billing_stage:
              description: The billing stage of the project (Outseta)
              type: string
            ds_license_type:
              description: The license type of the project
              type: string
            primary_contact_email:
              description: Primary contact (Outseta) for the project
              type: string
            project_weekly_notifications:
              description: dictionary of days of the week as bools
              properties:
                Friday:
                  type: boolean
                Monday:
                  type: boolean
                Saturday:
                  type: boolean
                Sunday:
                  type: boolean
                Thursday:
                  type: boolean
                Tuesday:
                  type: boolean
                Wednesday:
                  type: boolean
              type: object
          required:
          - primary_contact_email
          - billing_stage
          - project_weekly_notifications
          - ds_license_type
          type: object
      responses:
        201:
          description: Account successfully created
        400:
          description: Bad Request
        401:
          description: Insufficent permissions
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create an outseta account for a project
      tags:
      - Outseta
      x-min-permissions: admin
  /v1/workspaces/{workspaceId}/projects/{projectId}/parameters:
    get:
      description: Get list of unique parameters from all parameter sets for a project
      operationId: v1_getParameters
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: A list of parameters
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get parameters for project
      tags:
      - Info
  /v1/workspaces/{workspaceId}/projects/{projectId}/powerbi/apps/{contentPack}:
    post:
      operationId: v1_postPowerBiApps
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: contentPack
        required: true
        type: string
      responses:
        202:
          description: App deployment initiated
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Deploy power bi apps by content pack
      tags:
      - Power BI
      x-min-permissions: admin
  /v1/workspaces/{workspaceId}/projects/{projectId}/powerbi/deploy/apps:
    post:
      operationId: v1_deployPbiApp
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            content_pack:
              type: string
            id_dashboard_deployment_job:
              type: integer
          required:
          - id_dashboard_deployment_job
          - content_pack
          type: object
      responses:
        200:
          description: Deployment initiated
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Deploy power bi app
      tags:
      - Power BI
      x-min-permissions: admin
  /v1/workspaces/{workspaceId}/projects/{projectId}/powerbi/embedded/apps/{appName}:
    get:
      operationId: v1_getEmbeddedPbiApp
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: appName
        required: true
        type: string
      responses:
        200:
          description: App returned
        401:
          description: Unauthorized
        404:
          description: App not found in project
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get PBI Embedded App
      tags:
      - Power BI
  /v1/workspaces/{workspaceId}/projects/{projectId}/powerbi/filters:
    get:
      operationId: v1_getPbiFilters
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Filters for pbi
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get filters for power bi
      tags:
      - Power BI
  /v1/workspaces/{workspaceId}/projects/{projectId}/powerbi/refresh/apps:
    get:
      operationId: v1_getPowerBiApps
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get power bi apps & latest refresh dates in a project
      tags:
      - Power BI
  /v1/workspaces/{workspaceId}/projects/{projectId}/powerbi/refresh/apps/{appName}:
    post:
      operationId: v1_refreshPowerBiApp
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: appName
        required: true
        type: string
      responses:
        200:
          description: App refresh initiated
        204:
          description: App refresh not iniated for some reason (eg. already in progress)
        401:
          description: Unauthorized
        404:
          description: App not found in project
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Refresh Power BI app in project
      tags:
      - Power BI
  /v1/workspaces/{workspaceId}/projects/{projectId}/powerbi/syncback/apps/{appName}:
    post:
      operationId: v1_syncbackPbiApp
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: appName
        required: true
        type: string
      responses:
        200:
          description: Syncback complete
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Run syncback for power bi app
      tags:
      - Power BI
  /v1/workspaces/{workspaceId}/projects/{projectId}/resources:
    get:
      operationId: v1_getResources
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get resources
      tags:
      - Resources
      x-min-permissions: isRevitUser
    post:
      operationId: v1_postResources
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            parent_resource_id:
              description: The parent resource id
              type: integer
            resource_mapping:
              description: The resource mapping
              properties:
                related_column:
                  description: The related column, based on resource_type
                  type: string
                related_key:
                  description: The related key
                  type: string
                related_table:
                  description: The related table, based on resource_type
                  type: string
              type: object
            resource_name:
              description: The name of the resource
              type: string
            resource_type:
              description: The type of the resource, defaults to unknown if not provided
              enum:
              - person
              - team
              - company
              type: string
          required:
          - resource_name
          type: object
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create a resource
      tags:
      - Resources
      x-min-permissions: isRevitUser
  /v1/workspaces/{workspaceId}/projects/{projectId}/sourcefiles:
    get:
      description: Returns all sourcefiles details for a project
      operationId: v1_getSourceFiles
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: A list of sourcefiles
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get sourcefies by projectid
      tags:
      - Files
    post:
      consumes:
      - application/json
      description: Creates a new sourcefile in a project with provided filename and
        discipline
      operationId: v1_postSourceFiles
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            discipline:
              description: The discipline of the sourcefile
              type: string
            filename:
              description: The name of the sourcefile
              type: string
          required:
          - filename
          - discipline
          type: object
      responses:
        201:
          description: Sourcefile successfully created
          schema:
            description: idSourceFiles
            type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized
        409:
          description: Filename already exists
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create a sourcefile in a project
      tags:
      - Files
  /v1/workspaces/{workspaceId}/projects/{projectId}/teams:
    get:
      operationId: v1_getTeams
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: query
        name: includeDetails
        required: false
        type: boolean
      responses:
        200:
          description: list of teams
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get list of teams
      tags:
      - Teams
    post:
      operationId: v1_postTeam
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            company_id:
              description: The company id of the team (see GET /companies)
              type: integer
            discipline:
              description: The name of the team
              type: string
            pri_abbrev:
              description: The abbreviation of the team
              type: string
          required:
          - discipline
          - pri_abbrev
          - company_id
          type: object
      responses:
        200:
          description: new team created
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create a new team
      tags:
      - Teams
  /v1/workspaces/{workspaceId}/projects/{projectId}/teams/bulk:
    post:
      operationId: v1_postTeamsBulk
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: The file to upload
        in: formData
        name: file
        required: true
        type: string
      responses:
        200:
          description: updates complete
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Bulk edit teams with template
      tags:
      - Teams
  /v1/workspaces/{workspaceId}/projects/{projectId}/teams/{teamId}:
    patch:
      operationId: v1_patchTeam
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: teamId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            company_id:
              description: The company id of the team (see GET /companies)
              type: integer
            discipline:
              description: The name of the team
              type: string
            pri_abbrev:
              description: The abbreviation of the team
              type: string
          type: object
      responses:
        200:
          description: team edited
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Edit a team
      tags:
      - Teams
  /v1/workspaces/{workspaceId}/projects/{projectId}/tokens/{tokenId}:
    get:
      operationId: v1_getProjectTokens
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: tokenId
        required: true
        type: string
      - description: Include isProjectManager flag in response
        in: query
        name: includeIsProjectManagerFlag
        required: false
        type: boolean
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get a token for a project
      tags:
      - Tokens
  /v1/workspaces/{workspaceId}/projects/{projectId}/users:
    get:
      description: Returns all users and user details for a project
      operationId: v1_getProjectUsers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get users in a project
      tags:
      - Users
    post:
      description: Creates a user if not already exista and invites to project
      operationId: v1_postProjectUsers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            email:
              description: The email of the user
              type: string
            isProjectManager:
              description: bool indicating whether the user is a project manager (default
                false)
              type: boolean
            isProjectViewer:
              description: bool indicating whether the user is a project viewer (default
                false)
              type: boolean
            isRevitUsers:
              description: bool indicating whether the user is a revit user (default
                false)
              type: boolean
            isWorkspaceDashboardViewer:
              description: bool indicating whether the user is a workspace viewer
                (default false)
              type: boolean
            isWorkspaceManager:
              description: bool indicating whether the user is a workspace manager
                (default false)
              type: boolean
            name:
              description: The name of the user like First Last
              type: string
            team_bim_id:
              description: The team id to add the user to on the project
              type: integer
          required:
          - email
          - name
          - team_bim_id
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Invite user to a project
      tags:
      - Users
  /v1/workspaces/{workspaceId}/projects/{projectId}/users/{userId}:
    get:
      description: Returns user and details for specified project
      operationId: v1_getProjectUser
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get user in a project
      tags:
      - Users
    patch:
      description: Edit project-level attributes of a user
      operationId: v1_patchProjectUsers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            isProjectManager:
              description: bool indicating whether the user is a project manager (default
                false)
              type: boolean
            isProjectTeam:
              description: bool indicating whether the user is a project team member
                (default false)
              type: boolean
            isProjectViewer:
              description: bool indicating whether the user is a project viewer (default
                false)
              type: boolean
            isRevitUsers:
              description: bool indicating whether the user is a revit user (default
                false)
              type: boolean
            name:
              description: The name of the user like First Last
              type: string
            team_bim_id:
              description: The team id to add the user to on the project
              type: integer
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Edit a user in a project
      tags:
      - Users
  /v1/workspaces/{workspaceId}/projects/{projectId}/wbs:
    get:
      operationId: v1_getWBS
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get WBS
      tags:
      - Resources
    patch:
      operationId: v1_patchWBS
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            parent_wbs_id:
              description: The parent WBS id
              type: integer
            wbs_name:
              description: The name of the wbs
              type: string
          type: object
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Edit a WBS
      tags:
      - WBS
      x-min-permissions: isProjectManager
    post:
      operationId: v1_postWBS
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            parent_wbs_id:
              description: The parent WBS id
              type: integer
            wbs_name:
              description: The name of the wbs
              type: string
          required:
          - wbs_name
          type: object
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Create a WBS
      tags:
      - WBS
      x-min-permissions: isProjectManager
  /v1/workspaces/{workspaceId}/resources:
    get:
      operationId: v1_getResourcesWS
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get resources
      tags:
      - Resources
      x-min-permissions: isRevitUser
  /v1/workspaces/{workspaceId}/users:
    get:
      description: Returns all users and user details for a workspace
      operationId: v1_getWorkspaceUsers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Get users in a workspaces
      tags:
      - Users
    post:
      description: Creates user if not already exista and invites to workspace
      operationId: v1_postWorkspaceUsers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            email:
              description: The email of the user
              type: string
            isWorkspaceDashboardViewer:
              description: bool indicating whether the user is a workspace viewer
                (default false)
              type: boolean
            isWorkspaceManager:
              description: bool indicating whether the user is a workspace manager
                (default false)
              type: boolean
            name:
              description: The name of the user like First Last
              type: string
            projects:
              description: array of project to add the user to in workspace
              items:
                properties:
                  isProjectManager:
                    description: bool indicating whether the user is a project manager
                      (default false)
                    type: boolean
                  isProjectViewer:
                    description: bool indicating whether the user is a project viewer
                      (default false)
                    type: boolean
                  isRevitUser:
                    description: bool indicating whether the user is a revit user
                      (default false)
                    type: boolean
                  project_id:
                    description: The project id to add the user to
                    type: integer
                  team_bim_id:
                    description: The team id to add the user to on the project
                    type: integer
                required:
                - project_id
                - team_bim_id
                type: object
              type: array
          required:
          - email
          - name
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Invite user to a workspace
      tags:
      - Users
  /v1/workspaces/{workspaceId}/users/{userId}:
    patch:
      description: Edit workspace-level attributes of a user
      operationId: v1_patchWorkspaceUsers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: userId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            isWorkspaceDashboardViewer:
              description: bool indicating whether the user isWorkspaceDashboardViewer
                (default false)
              type: boolean
            isWorkspaceManager:
              description: bool indicating whether the user isWorkspaceManager (default
                false)
              type: boolean
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Edit a user in a workspace
      tags:
      - Users
    post:
      operationId: v1_postWorkspaceUserId
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: userId
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v1: []
      summary: Resend invite email to user in workspace
      tags:
      - Users
  /v2/actions/associations:
    get:
      operationId: v2_getAssociations
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get associations for a user
      tags:
      - Actions
      x-min-permissions: isRevitUser
  /v2/jobs/{job_id}:
    post:
      operationId: v2_startJobGlobal
      parameters:
      - in: path
        name: job_id
        required: true
        type: integer
      responses:
        202:
          description: Job started, returns job guid
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Start a new job at global-level
      tags:
      - Jobs
  /v2/migrations/{migrationId}:
    post:
      operationId: v2_runMigration
      parameters:
      - in: path
        name: migrationId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            functiondata:
              description: The data to pass to the migration function (see migration
                documentation)
              type: object
            region:
              description: The region of the workspace
              type: string
            workspace:
              description: The workspace to run the migration on
              type: string
          required:
          - region
          - workspace
          - functiondata
          type: object
      responses:
        207:
          description: Migration ran, see response for details
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Run a schema migration
      tags:
      - Migrations
      x-min-permissions: admin
  /v2/powerbi-xmla/system-tables:
    get:
      operationId: v2_uploadSystemTables
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Retrieve system tables from Power BI XMLA
      tags:
      - Power BI
      x-min-permissions: admin
  /v2/regions:
    get:
      description: Returns list of api-supported regions
      operationId: v2_getRegions
      parameters:
      - description: Comma-separated list of fields to include in the response
        in: query
        name: fields
        required: false
        type: string
      responses:
        200:
          description: list of supported regions
      summary: Get supported regions
      tags:
      - Info
  /v2/secret/{secretName}:
    get:
      operationId: v2_getSecret
      parameters:
      - in: path
        name: secretName
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get a secret
      tags:
      - Admin
      x-min-permissions: admin
  /v2/users:
    post:
      description: Creates a user if not already exists in Outseta only
      operationId: v2_postOutsetauser
      parameters:
      - in: body
        name: body
        required: true
        schema:
          properties:
            email:
              description: The email of the user
              type: string
            name:
              description: The name of the user like First Last
              type: string
          required:
          - email
          - name
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create user in Outseta
      tags:
      - Users
      x-min-permissions: admin
  /v2/workspaces:
    get:
      description: Returns all workspaces and projects a user has access to with optional
        parameters for extra info
      operationId: v2_getWorkspaces
      parameters:
      - description: Includes additional details in response
        in: query
        name: includeDetails
        required: false
        type: boolean
      - description: Includes permissions in response
        in: query
        name: includePermissions
        required: false
        type: boolean
      responses:
        200:
          description: Successful response with a list of workspaces and projects
          schema:
            items:
              properties:
                projects:
                  items:
                    properties:
                      project_id:
                        example: 1
                        type: integer
                      project_name:
                        example: My Project Name
                        type: string
                    type: object
                  type: array
                workspace:
                  description: ds_workspace_name corresponding to dataset name
                  example: ds_12345678_9123_4567_8912_123456789123
                  type: string
                workspace_name:
                  example: My Workspace Name
                  type: string
              type: object
            type: array
        204:
          description: No content to return
        400:
          description: Bad Request due to invalid parameters
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get list of workspaces and associated projects
      tags:
      - Info
  /v2/workspaces/{workspaceId}/companies:
    get:
      description: Returns all companies for a workspace
      operationId: v2_getWorkspaceCompanies
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get companies in a workspaces
      tags:
      - Companies
    post:
      consumes:
      - application/json
      description: Creates a new company in a workspace. Requires workspace manager
        permissions
      operationId: v2_postWorkspaceCompanies
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            company_abbreviation:
              description: The abbreviation of the company name
              type: string
            company_name:
              description: The name of the company
              type: string
          required:
          - company_name
          - company_abbreviation
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create company in a workspaces
      tags:
      - Companies
  /v2/workspaces/{workspaceId}/companies/{companyId}:
    patch:
      consumes:
      - application/json
      operationId: v2_patchWorkspaceCompanies
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: companyId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            company_abbreviation:
              description: The abbreviation of the company name
              type: string
            company_name:
              description: The name of the company
              type: string
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Update a company
      tags:
      - Companies
  /v2/workspaces/{workspaceId}/jobs/{job_id}:
    post:
      operationId: v2_startJobWorkspace
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: job_id
        required: true
        type: integer
      responses:
        202:
          description: Job started, returns job guid
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Start a new job at workpace-level
      tags:
      - Jobs
  /v2/workspaces/{workspaceId}/powerbi:
    post:
      operationId: v2_postPowerBiWorkspace
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create a new power bi workspace
      tags:
      - Power BI
      x-min-permissions: admin
  /v2/workspaces/{workspaceId}/projects:
    get:
      operationId: v2_getProjects
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - description: Include details of projects
        in: query
        name: includeDetails
        required: false
        type: boolean
      responses:
        200:
          description: Project details
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get projects in a workspace
      tags:
      - Info
    post:
      consumes:
      - application/json
      operationId: v2_postProject
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            billing_stage:
              description: The billing stage of the project (Outseta)
              type: string
            ds_license_type:
              description: The license type of the project
              type: string
            hosting_region:
              description: The hosting region of the project
              type: string
            primary_contact_email:
              description: Primary contact (Outseta) for the project
              type: string
            project_name:
              description: The name of the project
              type: string
            project_weekly_notifications:
              description: dictionary of days of the week as bools
              properties:
                Friday:
                  type: boolean
                Monday:
                  type: boolean
                Saturday:
                  type: boolean
                Sunday:
                  type: boolean
                Thursday:
                  type: boolean
                Tuesday:
                  type: boolean
                Wednesday:
                  type: boolean
              type: object
          required:
          - project_name
          - primary_contact_email
          - billing_stage
          - hosting_region
          - ds_license_type
          type: object
      responses:
        201:
          description: Project successfully created
        400:
          description: Bad Request
        401:
          description: Insufficent permissions to create project
        403:
          description: Forbidden to create project
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create a new project
      tags:
      - Project
  /v2/workspaces/{workspaceId}/projects/{projectId}:
    delete:
      consumes:
      - application/json
      operationId: v2_archiveProject
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: string
      responses:
        201:
          description: Project successfully archived
        400:
          description: Bad Request
        401:
          description: Insufficent permissions to archive project
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Archive a project
      tags:
      - Project
    get:
      operationId: v2_getProject
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: string
      - description: Include details of the project
        in: query
        name: includeDetails
        required: false
        type: boolean
      responses:
        200:
          description: A successful response
        400:
          description: Bad Request
        401:
          description: Insufficent permissions
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get project
      tags:
      - Project
    patch:
      consumes:
      - application/json
      operationId: v2_updateProject
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            project_name:
              description: Name for the project
              type: string
          type: object
      responses:
        201:
          description: Project successfully archived
        400:
          description: Bad Request
        401:
          description: Insufficent permissions to archive project
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Update a project
      tags:
      - Project
  /v2/workspaces/{workspaceId}/projects/{projectId}/actions:
    get:
      operationId: v2_getActions
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: query
        name: currentApp
        required: false
        type: string
      responses:
        200:
          description: Successfully created new action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get actions
      tags:
      - Actions
    patch:
      operationId: v2_updateAction
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            action_id:
              description: id of existing action to update
              type: integer
          required:
          - action_id
          type: object
      responses:
        200:
          description: Successfully updated action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Update fields in existing action
      tags:
      - Actions
    post:
      operationId: v2_createAction
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: Name of the action
        in: formData
        name: name
        required: true
        type: string
      - description: Description of the action
        in: formData
        name: description
        required: false
        type: string
      - description: Due date of the action, expected format 'yyyy-mm-dd'
        in: formData
        name: dueDate
        required: false
        type: string
      - description: Rating of the action - "Low", "Medium", "High"
        in: formData
        name: rating
        required: false
        type: string
      - description: App that the action was created from
        in: formData
        name: currentApp
        required: false
        type: string
      - description: A JSON string representing a list of attachment objects. Each
          object must contain a `cde_id` property.
        in: formData
        name: attachments
        required: false
        type: string
      responses:
        200:
          description: Successfully created new action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create new action
      tags:
      - Actions
  /v2/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}:
    get:
      operationId: v2_getSingleAction
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      responses:
        200:
          description: Successfully got action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get an action
      tags:
      - Actions
    patch:
      operationId: v2_updateSingleAction
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: formData
        name: body
        required: true
        type: string
      responses:
        200:
          description: Successfully updated action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Update fields in existing action
      tags:
      - Actions
  /v2/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/associations/{associationIdentifier}:
    get:
      operationId: v2_getActionAssociation
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: path
        name: associationIdentifier
        required: true
        type: string
      - description: The association_source_table_key
        in: query
        name: association_source_table_key
        required: false
        type: string
      - description: The association_row_table_key
        in: query
        name: association_row_table_key
        required: false
        type: string
      - description: The association type
        in: query
        name: association_type
        required: false
        type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Find an association
      tags:
      - Actions
      x-min-permissions: isRevitUser
    post:
      operationId: v2_postActionAssociation
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: path
        name: associationIdentifier
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            association_row_table_key:
              description: The key for association row table
              type: string
            association_source_table_key:
              description: The key for association source table
              type: string
          type: object
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Add an association to an action
      tags:
      - Actions
      x-min-permissions: isRevitUser
  /v2/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/associations/{associationIdentifier}/{associationId}:
    delete:
      operationId: v2_deleteActionAssociation
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: path
        name: associationIdentifier
        required: true
        type: string
      - description: ID of the association to remove
        in: path
        name: associationId
        required: true
        type: integer
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Remove an existing association
      tags:
      - Actions
      x-min-permissions: isRevitUser
  /v2/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/attachments:
    get:
      operationId: v2_getActionAttachments
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      responses:
        200:
          description: Successfully got attachments
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get attachments for an action
      tags:
      - Actions
    post:
      operationId: v2_postActionAttachments
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            attachments:
              description: A list of attachment objects
              items:
                properties:
                  cde_id:
                    description: CDE id corresponding to file
                    type: integer
                required:
                - cde_id
                type: object
              type: array
          required:
          - attachments
          type: object
      responses:
        200:
          description: Successfully got attachments
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Add attachments to action
      tags:
      - Actions
  /v2/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/comments:
    get:
      operationId: v2_getActionComments
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: query
        name: withAttachments
        required: false
        type: boolean
      responses:
        200:
          description: Successfully got comments
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get comments for an action
      tags:
      - Actions
    post:
      operationId: v2_postActionComment
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            attachments:
              description: A list of attachment objects
              items:
                properties:
                  cde_id:
                    description: CDE id corresponding to file
                    type: integer
                required:
                - cde_id
                type: object
              type: array
            comment:
              description: The comment to add
              type: string
          required:
          - comment
          type: object
      responses:
        200:
          description: Successfully created comment
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create comment for an action
      tags:
      - Actions
  /v2/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/comments/{commentId}:
    get:
      operationId: v2_getActionComment
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: path
        name: commentId
        required: true
        type: integer
      - in: query
        name: withAttachments
        required: false
        type: boolean
      responses:
        200:
          description: Successfully got comment
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get comment for an action
      tags:
      - Actions
  /v2/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/comments/{commentId}/attachments:
    post:
      operationId: v2_postActionCommentAttachments
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: path
        name: commentId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            attachments:
              description: A list of attachment objects
              items:
                properties:
                  cde_id:
                    description: CDE id corresponding to file
                    type: integer
                required:
                - cde_id
                type: object
              type: array
          required:
          - attachments
          type: object
      responses:
        200:
          description: Successfully added attachment
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Add attachments to action coment
      tags:
      - Actions
  /v2/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/watchers:
    get:
      operationId: v2_getActionWatchers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      responses:
        200:
          description: Successfully got watchers
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get watchers for an action
      tags:
      - Actions
    post:
      operationId: v2_postActionWatcher
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            watcher:
              description: The email of the watcher
              type: string
          required:
          - watcher
          type: object
      responses:
        200:
          description: Successfully added watcher
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Add watcher to action
      tags:
      - Actions
  /v2/workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/watchers/{watcherId}:
    delete:
      operationId: v2_deleteActionWatcher
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: actionId
        required: true
        type: integer
      - description: email of watcher
        in: path
        name: watcherId
        required: true
        type: string
      responses:
        200:
          description: Successfully removed watcher
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Remove watcher from action
      tags:
      - Actions
  /v2/workspaces/{workspaceId}/projects/{projectId}/activity:
    get:
      operationId: v2_getUserActivity
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get User Activity
      tags:
      - Admin
  /v2/workspaces/{workspaceId}/projects/{projectId}/cde:
    get:
      operationId: v2_getCdeDocs
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Successfully returns CDE docs
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get CDE docs
      tags:
      - Get Data
    post:
      operationId: v2_postCde
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            cde_type:
              description: The type of CDE upload
              type: string
            files:
              description: A list of file objects
              items:
                properties:
                  filename:
                    description: The name of the file
                    type: string
                  filetype:
                    description: The type of the file
                    type: string
                required:
                - filename
                - filetype
                type: object
              type: array
          required:
          - files
          type: object
      responses:
        200:
          description: Successfully returns CDE urls
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get signed urls for cde
      tags:
      - Upload Data
  /v2/workspaces/{workspaceId}/projects/{projectId}/cde/process:
    post:
      operationId: v2_processCDE
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            files:
              description: A list of file objects
              items:
                properties:
                  cde_id:
                    description: The CDE ID of the file
                    type: integer
                required:
                - cde_id
                type: object
              type: array
          required:
          - files
          type: object
      responses:
        200:
          description: Successfully processed files
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Process files uploaded to CDE
      tags:
      - Upload Data
  /v2/workspaces/{workspaceId}/projects/{projectId}/cde/{cdeId}:
    delete:
      description: Invalidates a CDE entry for failed uploads
      operationId: v2_invalidateCdeEntry
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: cdeId
        required: true
        type: integer
      responses:
        200:
          description: Successfully invalidated CDE entry
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Invalidate CDE Entry
      tags:
      - Upload Data
    get:
      operationId: v2_getCdeFile
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: cdeId
        required: true
        type: integer
      responses:
        200:
          description: Successfully returns CDE url
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get signed url to access cde file
      tags:
      - Get Data
  /v2/workspaces/{workspaceId}/projects/{projectId}/cloudstoragebucket:
    get:
      description: Creates a new cloud storage bucket
      operationId: v2_getCloudStorageBucket
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Created Cloud Storage Bucket Name
          schema:
            type: string
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create a cloud storage bucket for single-use and return its name
      tags:
      - Navis Integration
    post:
      consumes:
      - application/json
      description: Creates a new cloud storage bucket for a project and initialises
        files expected to arrive in bucket.
      operationId: v2_postCloudStorageBucket
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            collectorKeys:
              description: A list of collector keys (strings)
            fileIds:
              description: A list of file ids (integers)
          required:
          - collectorKeys
          - fileIds
          type: object
      responses:
        200:
          description: Created Cloud Storage Bucket Name
          schema:
            type: string
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create a cloud storage bucket for expected files and return its name
      tags:
      - Navis Integration
  /v2/workspaces/{workspaceId}/projects/{projectId}/correspondence:
    post:
      operationId: v2_logCorrespondence
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            attachments:
              description: array of attachment objects
              items:
                properties:
                  cde_id:
                    description: The CDE ID corresponding to attachment
                    type: integer
                required:
                - cde_id
                type: object
              type: array
            date_sent:
              description: datetime in ISO format
              type: string
            html_content:
              description: The html content of the email
              type: string
            recipients:
              description: array of recipient objects
              items:
                properties:
                  email:
                    description: The email of the recipient
                    type: string
                  name:
                    description: The name of the recipient
                    type: string
                  type:
                    description: The type of recipient ('to', 'cc', 'bcc')
                    type: string
                required:
                - email
                - name
                - type
                type: object
              type: array
            sender_email:
              description: The email of the sender
              type: string
            sender_name:
              description: The name of the sender
              type: string
            subject:
              description: The email subject
              type: string
            text_content:
              description: The text content of the email
              type: string
          required:
          - subject
          - date_sent
          - text_content
          - html_content
          - sender_email
          - sender_name
          - recipients
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Log a correspondence in Deep Space
      tags:
      - Correspondence Logging
  /v2/workspaces/{workspaceId}/projects/{projectId}/data:
    get:
      operationId: v2_getDataClassifications
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: A list of supported data classifications
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get list of data classifications
      tags:
      - Upload Data
  /v2/workspaces/{workspaceId}/projects/{projectId}/data/any:
    post:
      consumes:
      - multipart/form-data
      description: Generic endpoint to upload csv data in any format to Deep Space
        in EAV format.
      operationId: v2_uploadanydata
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: The CSV file to upload
        in: formData
        name: file
        required: true
        type: string
      - description: The unique identifying name to categorise the data type
        in: formData
        name: data_classification
        required: true
        type: string
      responses:
        200:
          description: ingest_id of successfully loaded data
          schema:
            type: string
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Upload any data to Deep Space
      tags:
      - Upload Data
  /v2/workspaces/{workspaceId}/projects/{projectId}/data/{data_classification}:
    get:
      operationId: v2_getDataSources
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: The classification of the data
        in: path
        name: data_classification
        required: true
        type: string
      responses:
        200:
          description: A list of supported data sources
        400:
          description: Bad Request
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get list of data sources
      tags:
      - Upload Data
  /v2/workspaces/{workspaceId}/projects/{projectId}/data/{data_classification}/{data_source}/{export_type}/{export_version}:
    post:
      consumes:
      - multipart/form-data
      operationId: v2_uploaddata
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: The classification of the data
        in: path
        name: data_classification
        required: true
        type: string
      - description: The source of the data
        in: path
        name: data_source
        required: true
        type: string
      - description: The type of export
        in: path
        name: export_type
        required: true
        type: string
      - description: The version of the export
        in: path
        name: export_version
        required: true
        type: string
      - description: The file to upload
        in: formData
        name: file
        required: true
        type: string
      responses:
        200:
          description: crawlId of successfully loaded data
          schema:
            type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized
        422:
          description: Unprocessable Entity
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Upload data to Deep Space from supported formats
      tags:
      - Upload Data
  /v2/workspaces/{workspaceId}/projects/{projectId}/files/{fileId}/navis/{collectorKey}:
    post:
      consumes:
      - application/json
      operationId: v2_navisfileupload
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: The file id
        in: path
        name: fileId
        required: true
        type: string
      - description: The collector key
        in: path
        name: collectorKey
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            bucket_name:
              description: The name of the cloud storage bucket
            crawlKey:
              description: The crawl key
            end_time:
              description: 'Datetime value of end of navis extraction - expected format:
                %d/%m/%Y %I:%M:%S %p'
            start_time:
              description: 'Datetime value of start of navis extraction - expected
                format: %d/%m/%Y %I:%M:%S %p'
          required:
          - start_time
          - end_time
          - bucket_name
          - crawlKey
          type: object
      responses:
        200:
          description: Successfully uploaded navis data
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Upload navis data to Deep Space at the file level
      tags:
      - Navis Integration
  /v2/workspaces/{workspaceId}/projects/{projectId}/integrations:
    get:
      operationId: v2_getProjectIntegrations
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get integrations on a project
      tags:
      - External Integrations
      x-min-permissions: isRevitUser
  /v2/workspaces/{workspaceId}/projects/{projectId}/integrations/{integrationId}:
    get:
      operationId: v2_getProjectIntegrationFields
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: integrationId
        required: true
        type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get mapping fields for an integration
      tags:
      - External Integrations
      x-min-permissions: isRevitUser
    patch:
      operationId: v2_patchProjectIntegration
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: integrationId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            mappingFieldValue1:
              description: The first mapping field value
              type: string
            mappingFieldValue2:
              description: The first mapping field value
              type: string
          required:
          - mappingFieldValue1
          - mappingFieldValue2
          type: object
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Update an integration configuration on a project
      tags:
      - External Integrations
      x-min-permissions: isRevitUser
    post:
      operationId: v2_postProjectIntegration
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: integrationId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          description: json object containing configuration values, differs depending
            on integration
          type: object
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Configure an integration on a project
      tags:
      - External Integrations
      x-min-permissions: isRevitUser
  /v2/workspaces/{workspaceId}/projects/{projectId}/integrations/{integrationId}/refresh:
    post:
      operationId: v2_postProjectIntegrationRefresh
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: integrationId
        required: true
        type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Refresh access token for an integration on a project
      tags:
      - External Integrations
      x-min-permissions: isRevitUser
  /v2/workspaces/{workspaceId}/projects/{projectId}/integrations/{integrationId}/sync:
    post:
      operationId: v2_postProjectIntegrationSync
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: integrationId
        required: true
        type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Sync data for an integration on a project
      tags:
      - External Integrations
      x-min-permissions: isRevitUser
  /v2/workspaces/{workspaceId}/projects/{projectId}/jobs:
    get:
      operationId: v2_getJobs
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: Get jobs associated with a specific app
        in: query
        name: app
        required: false
        type: string
      responses:
        202:
          description: Job started, returns job guid
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get supported jobs
      tags:
      - Jobs
  /v2/workspaces/{workspaceId}/projects/{projectId}/jobs/{job_guid}/status:
    get:
      operationId: v2_getJobStatus
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: job_guid
        required: true
        type: integer
      responses:
        202:
          description: Returns job status
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get job status
      tags:
      - Jobs
  /v2/workspaces/{workspaceId}/projects/{projectId}/jobs/{job_id}:
    post:
      operationId: v2_startJob
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: job_id
        required: true
        type: integer
      responses:
        202:
          description: Job started, returns job guid
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Start a new job
      tags:
      - Jobs
  /v2/workspaces/{workspaceId}/projects/{projectId}/link/{linkType}:
    get:
      operationId: v2_getProjectLinkType
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: linkType
        required: true
        type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get specified link type for a project
      tags:
      - Links
      x-min-permissions: isRevitUser
  /v2/workspaces/{workspaceId}/projects/{projectId}/logout/{userId}:
    post:
      description: Used to track logout times, mainly for concurrent seat licenses
      operationId: v2_logoutUser
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: email
        in: path
        name: userId
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Logout a user for a certain project
      tags:
      - Users
  /v2/workspaces/{workspaceId}/projects/{projectId}/milestone:
    get:
      operationId: v2_getMilestones
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: A list of current milestones
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get list of current milestones
      tags:
      - Milestones
    post:
      operationId: v2_postMilestone
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            discipline:
              description: The date of the milestone, expected format 'yyyy-mm-dd'
              type: string
            filename:
              description: The name of the milestone
              type: string
          required:
          - milestone_name
          - milestone_date
          type: object
      responses:
        201:
          description: Successfully created new milestone
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create new milestone
      tags:
      - Milestones
  /v2/workspaces/{workspaceId}/projects/{projectId}/navis/{collectorKey}:
    post:
      consumes:
      - application/json
      operationId: v2_navisprojectupload
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: The collector key
        in: path
        name: collectorKey
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            bucket_name:
              description: The name of the cloud storage bucket
            crawlKey:
              description: The crawl key
            end_time:
              description: 'Datetime value of end of navis extraction - expected format:
                %d/%m/%Y %I:%M:%S %p'
            start_time:
              description: 'Datetime value of start of navis extraction - expected
                format: %d/%m/%Y %I:%M:%S %p'
          required:
          - start_time
          - end_time
          - bucket_name
          - crawlKey
          type: object
      responses:
        200:
          description: Successfully uploaded navis data
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Upload navis data to Deep Space at the project level
      tags:
      - Navis Integration
  /v2/workspaces/{workspaceId}/projects/{projectId}/outseta:
    patch:
      consumes:
      - application/json
      operationId: v2_patchProjectOutseta
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            webflow_collection_id:
              description: The webflow collection id
              type: string
          required:
          - webflow_collection_id
          type: object
      responses:
        200:
          description: Account successfully updated
        400:
          description: Bad Request
        401:
          description: Insufficent permissions
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Update an outseta account
      tags:
      - Outseta
      x-min-permissions: admin
    post:
      consumes:
      - application/json
      operationId: v2_postProjectOutseta
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            billing_stage:
              description: The billing stage of the project (Outseta)
              type: string
            ds_license_type:
              description: The license type of the project
              type: string
            primary_contact_email:
              description: Primary contact (Outseta) for the project
              type: string
            project_weekly_notifications:
              description: dictionary of days of the week as bools
              properties:
                Friday:
                  type: boolean
                Monday:
                  type: boolean
                Saturday:
                  type: boolean
                Sunday:
                  type: boolean
                Thursday:
                  type: boolean
                Tuesday:
                  type: boolean
                Wednesday:
                  type: boolean
              type: object
          required:
          - primary_contact_email
          - billing_stage
          - project_weekly_notifications
          - ds_license_type
          type: object
      responses:
        201:
          description: Account successfully created
        400:
          description: Bad Request
        401:
          description: Insufficent permissions
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create an outseta account for a project
      tags:
      - Outseta
      x-min-permissions: admin
  /v2/workspaces/{workspaceId}/projects/{projectId}/parameters:
    get:
      description: Get list of unique parameters from all parameter sets for a project
      operationId: v2_getParameters
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: A list of parameters
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get parameters for project
      tags:
      - Info
  /v2/workspaces/{workspaceId}/projects/{projectId}/powerbi/apps/{contentPack}:
    post:
      operationId: v2_postPowerBiApps
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: contentPack
        required: true
        type: string
      responses:
        202:
          description: App deployment initiated
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Deploy power bi apps by content pack
      tags:
      - Power BI
      x-min-permissions: admin
  /v2/workspaces/{workspaceId}/projects/{projectId}/powerbi/deploy/apps:
    post:
      operationId: v2_deployPbiApp
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            content_pack:
              type: string
            id_dashboard_deployment_job:
              type: integer
          required:
          - id_dashboard_deployment_job
          - content_pack
          type: object
      responses:
        200:
          description: Deployment initiated
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Deploy power bi app
      tags:
      - Power BI
      x-min-permissions: admin
  /v2/workspaces/{workspaceId}/projects/{projectId}/powerbi/embedded/apps/{appName}:
    get:
      operationId: v2_getEmbeddedPbiApp
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: appName
        required: true
        type: string
      responses:
        200:
          description: App returned
        401:
          description: Unauthorized
        404:
          description: App not found in project
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get PBI Embedded App
      tags:
      - Power BI
  /v2/workspaces/{workspaceId}/projects/{projectId}/powerbi/filters:
    get:
      operationId: v2_getPbiFilters
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Filters for pbi
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get filters for power bi
      tags:
      - Power BI
  /v2/workspaces/{workspaceId}/projects/{projectId}/powerbi/refresh/apps:
    get:
      operationId: v2_getPowerBiApps
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get power bi apps & latest refresh dates in a project
      tags:
      - Power BI
  /v2/workspaces/{workspaceId}/projects/{projectId}/powerbi/refresh/apps/{appName}:
    post:
      operationId: v2_refreshPowerBiApp
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: appName
        required: true
        type: string
      responses:
        200:
          description: App refresh initiated
        204:
          description: App refresh not iniated for some reason (eg. already in progress)
        401:
          description: Unauthorized
        404:
          description: App not found in project
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Refresh Power BI app in project
      tags:
      - Power BI
  /v2/workspaces/{workspaceId}/projects/{projectId}/powerbi/syncback/apps/{appName}:
    post:
      operationId: v2_syncbackPbiApp
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: appName
        required: true
        type: string
      responses:
        200:
          description: Syncback complete
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Run syncback for power bi app
      tags:
      - Power BI
  /v2/workspaces/{workspaceId}/projects/{projectId}/resources:
    get:
      operationId: v2_getResources
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get resources
      tags:
      - Resources
      x-min-permissions: isRevitUser
    post:
      operationId: v2_postResources
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            parent_resource_id:
              description: The parent resource id
              type: integer
            resource_mapping:
              description: The resource mapping
              properties:
                related_column:
                  description: The related column, based on resource_type
                  type: string
                related_key:
                  description: The related key
                  type: string
                related_table:
                  description: The related table, based on resource_type
                  type: string
              type: object
            resource_name:
              description: The name of the resource
              type: string
            resource_type:
              description: The type of the resource, defaults to unknown if not provided
              enum:
              - person
              - team
              - company
              type: string
          required:
          - resource_name
          type: object
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create a resource
      tags:
      - Resources
      x-min-permissions: isRevitUser
  /v2/workspaces/{workspaceId}/projects/{projectId}/sourcefiles:
    get:
      description: Returns all sourcefiles details for a project
      operationId: v2_getSourceFiles
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: A list of sourcefiles
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get sourcefies by projectid
      tags:
      - Files
    post:
      consumes:
      - application/json
      description: Creates a new sourcefile in a project with provided filename and
        discipline
      operationId: v2_postSourceFiles
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            discipline:
              description: The discipline of the sourcefile
              type: string
            filename:
              description: The name of the sourcefile
              type: string
          required:
          - filename
          - discipline
          type: object
      responses:
        201:
          description: Sourcefile successfully created
          schema:
            description: idSourceFiles
            type: string
        400:
          description: Bad Request
        401:
          description: Unauthorized
        409:
          description: Filename already exists
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create a sourcefile in a project
      tags:
      - Files
  /v2/workspaces/{workspaceId}/projects/{projectId}/teams:
    get:
      operationId: v2_getTeams
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: query
        name: includeDetails
        required: false
        type: boolean
      responses:
        200:
          description: list of teams
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get list of teams
      tags:
      - Teams
    post:
      operationId: v2_postTeam
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            company_id:
              description: The company id of the team (see GET /companies)
              type: integer
            discipline:
              description: The name of the team
              type: string
            pri_abbrev:
              description: The abbreviation of the team
              type: string
          required:
          - discipline
          - pri_abbrev
          - company_id
          type: object
      responses:
        200:
          description: new team created
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create a new team
      tags:
      - Teams
  /v2/workspaces/{workspaceId}/projects/{projectId}/teams/bulk:
    post:
      operationId: v2_postTeamsBulk
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - description: The file to upload
        in: formData
        name: file
        required: true
        type: string
      responses:
        200:
          description: updates complete
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Bulk edit teams with template
      tags:
      - Teams
  /v2/workspaces/{workspaceId}/projects/{projectId}/teams/{teamId}:
    patch:
      operationId: v2_patchTeam
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: teamId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            company_id:
              description: The company id of the team (see GET /companies)
              type: integer
            discipline:
              description: The name of the team
              type: string
            pri_abbrev:
              description: The abbreviation of the team
              type: string
          type: object
      responses:
        200:
          description: team edited
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Edit a team
      tags:
      - Teams
  /v2/workspaces/{workspaceId}/projects/{projectId}/tokens/{tokenId}:
    get:
      operationId: v2_getProjectTokens
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: tokenId
        required: true
        type: string
      - description: Include isProjectManager flag in response
        in: query
        name: includeIsProjectManagerFlag
        required: false
        type: boolean
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get a token for a project
      tags:
      - Tokens
  /v2/workspaces/{workspaceId}/projects/{projectId}/users:
    get:
      description: Returns all users and user details for a project
      operationId: v2_getProjectUsers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get users in a project
      tags:
      - Users
    post:
      description: Creates a user if not already exista and invites to project
      operationId: v2_postProjectUsers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            email:
              description: The email of the user
              type: string
            isProjectManager:
              description: bool indicating whether the user is a project manager (default
                false)
              type: boolean
            isProjectViewer:
              description: bool indicating whether the user is a project viewer (default
                false)
              type: boolean
            isRevitUsers:
              description: bool indicating whether the user is a revit user (default
                false)
              type: boolean
            isWorkspaceDashboardViewer:
              description: bool indicating whether the user is a workspace viewer
                (default false)
              type: boolean
            isWorkspaceManager:
              description: bool indicating whether the user is a workspace manager
                (default false)
              type: boolean
            name:
              description: The name of the user like First Last
              type: string
            team_bim_id:
              description: The team id to add the user to on the project
              type: integer
          required:
          - email
          - name
          - team_bim_id
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Invite user to a project
      tags:
      - Users
  /v2/workspaces/{workspaceId}/projects/{projectId}/users/{userId}:
    get:
      description: Returns user and details for specified project
      operationId: v2_getProjectUser
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get user in a project
      tags:
      - Users
    patch:
      description: Edit project-level attributes of a user
      operationId: v2_patchProjectUsers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: path
        name: userId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            isProjectManager:
              description: bool indicating whether the user is a project manager (default
                false)
              type: boolean
            isProjectTeam:
              description: bool indicating whether the user is a project team member
                (default false)
              type: boolean
            isProjectViewer:
              description: bool indicating whether the user is a project viewer (default
                false)
              type: boolean
            isRevitUsers:
              description: bool indicating whether the user is a revit user (default
                false)
              type: boolean
            name:
              description: The name of the user like First Last
              type: string
            team_bim_id:
              description: The team id to add the user to on the project
              type: integer
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Edit a user in a project
      tags:
      - Users
  /v2/workspaces/{workspaceId}/projects/{projectId}/wbs:
    get:
      operationId: v2_getWBS
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get WBS
      tags:
      - Resources
    patch:
      operationId: v2_patchWBS
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            parent_wbs_id:
              description: The parent WBS id
              type: integer
            wbs_name:
              description: The name of the wbs
              type: string
          type: object
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Edit a WBS
      tags:
      - WBS
      x-min-permissions: isProjectManager
    post:
      operationId: v2_postWBS
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: projectId
        required: true
        type: integer
      - in: body
        name: body
        required: true
        schema:
          properties:
            parent_wbs_id:
              description: The parent WBS id
              type: integer
            wbs_name:
              description: The name of the wbs
              type: string
          required:
          - wbs_name
          type: object
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Create a WBS
      tags:
      - WBS
      x-min-permissions: isProjectManager
  /v2/workspaces/{workspaceId}/resources:
    get:
      operationId: v2_getResourcesWS
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get resources
      tags:
      - Resources
      x-min-permissions: isRevitUser
  /v2/workspaces/{workspaceId}/users:
    get:
      description: Returns all users and user details for a workspace
      operationId: v2_getWorkspaceUsers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Get users in a workspaces
      tags:
      - Users
    post:
      description: Creates user if not already exista and invites to workspace
      operationId: v2_postWorkspaceUsers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            email:
              description: The email of the user
              type: string
            isWorkspaceDashboardViewer:
              description: bool indicating whether the user is a workspace viewer
                (default false)
              type: boolean
            isWorkspaceManager:
              description: bool indicating whether the user is a workspace manager
                (default false)
              type: boolean
            name:
              description: The name of the user like First Last
              type: string
            projects:
              description: array of project to add the user to in workspace
              items:
                properties:
                  isProjectManager:
                    description: bool indicating whether the user is a project manager
                      (default false)
                    type: boolean
                  isProjectViewer:
                    description: bool indicating whether the user is a project viewer
                      (default false)
                    type: boolean
                  isRevitUser:
                    description: bool indicating whether the user is a revit user
                      (default false)
                    type: boolean
                  project_id:
                    description: The project id to add the user to
                    type: integer
                  team_bim_id:
                    description: The team id to add the user to on the project
                    type: integer
                required:
                - project_id
                - team_bim_id
                type: object
              type: array
          required:
          - email
          - name
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Invite user to a workspace
      tags:
      - Users
  /v2/workspaces/{workspaceId}/users/{userId}:
    patch:
      description: Edit workspace-level attributes of a user
      operationId: v2_patchWorkspaceUsers
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: userId
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          properties:
            isWorkspaceDashboardViewer:
              description: bool indicating whether the user isWorkspaceDashboardViewer
                (default false)
              type: boolean
            isWorkspaceManager:
              description: bool indicating whether the user isWorkspaceManager (default
                false)
              type: boolean
          type: object
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Edit a user in a workspace
      tags:
      - Users
    post:
      operationId: v2_postWorkspaceUserId
      parameters:
      - in: path
        name: workspaceId
        required: true
        type: string
      - in: path
        name: userId
        required: true
        type: string
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
      security:
      - JWT_v2: []
      summary: Resend invite email to user in workspace
      tags:
      - Users
schemes:
- https
securityDefinitions:
  JWT_v1:
    authorizationUrl: ''
    flow: implicit
    type: oauth2
  JWT_v2:
    authorizationUrl: ''
    flow: implicit
    type: oauth2
swagger: '2.0'
