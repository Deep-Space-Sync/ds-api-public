swagger: '2.0'
info:
  title: Deep Space API
  version: 1.0.0
basePath: https://client.deepspacesync.com/api/v1/
schemes:
- https
securityDefinitions:
  JWT:
    authorizationUrl: ''
    flow: implicit
    type: oauth2
paths:
  /login:
    post:
      summary: Login to get JWT token
      description: Validates Deep Space username and password and returns JWT token
        for API
      operationId: login
      tags:
      - Authentication
      parameters:
      - name: username
        in: header
        required: true
        type: string
      - name: password
        in: header
        required: true
        type: string
      - name: region
        in: header
        required: true
        type: string
      responses:
        200:
          description: JWT
          schema:
            type: string
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/logout/{userId}:
    post:
      summary: Logout a user for a certain project
      description: Used to track logout times, mainly for concurrent seat licenses
      operationId: logoutUser
      tags:
      - Users
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: userId
        in: path
        required: true
        type: string
        description: email
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /regions:
    get:
      tags:
      - Info
      summary: Get supported regions
      description: Returns list of api-supported regions
      operationId: getRegions
      parameters:
      - in: query
        name: fields
        description: Comma-separated list of fields to include in the response
        required: false
        type: string
      responses:
        200:
          description: list of supported regions
  /workspaces:
    get:
      summary: Get list of workspaces and associated projects
      description: Returns all workspaces and projects a user has access to with optional
        parameters for extra info
      operationId: getWorkspaces
      tags:
      - Info
      parameters:
      - name: includeDetails
        description: Includes additional details in response
        in: query
        required: false
        type: boolean
      - name: includePermissions
        description: Includes permissions in response
        in: query
        required: false
        type: boolean
      security:
      - JWT: []
      responses:
        200:
          description: Successful response with a list of workspaces and projects
          schema:
            type: array
            items:
              type: object
              properties:
                workspace:
                  description: ds_workspace_name corresponding to dataset name
                  type: string
                  example: ds_12345678_9123_4567_8912_123456789123
                workspace_name:
                  type: string
                  example: My Workspace Name
                projects:
                  type: array
                  items:
                    type: object
                    properties:
                      project_id:
                        type: integer
                        example: 1
                      project_name:
                        type: string
                        example: My Project Name
        401:
          description: Unauthorized
        400:
          description: Bad Request due to invalid parameters
        204:
          description: No content to return
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/sourcefiles:
    get:
      summary: Get sourcefies by projectid
      description: Returns all sourcefiles details for a project
      operationId: getSourceFiles
      tags:
      - Files
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        200:
          description: A list of sourcefiles
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      summary: Create a sourcefile in a project
      description: Creates a new sourcefile in a project with provided filename and
        discipline
      operationId: postSourceFiles
      tags:
      - Files
      consumes:
      - application/json
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - filename
          - discipline
          properties:
            filename:
              type: string
              description: The name of the sourcefile
            discipline:
              type: string
              description: The discipline of the sourcefile
      security:
      - JWT: []
      responses:
        201:
          description: Sourcefile successfully created
          schema:
            description: idSourceFiles
            type: string
        401:
          description: Unauthorized
        409:
          description: Filename already exists
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/data/any:
    post:
      summary: Upload any data to Deep Space
      description: Generic endpoint to upload csv data in any format to Deep Space
        in EAV format.
      operationId: uploadanydata
      tags:
      - Upload Data
      consumes:
      - multipart/form-data
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: file
        in: formData
        required: true
        type: string
        description: The CSV file to upload
      - name: data_classification
        in: formData
        required: true
        type: string
        description: The unique identifying name to categorise the data type
      security:
      - JWT: []
      responses:
        200:
          description: ingest_id of successfully loaded data
          schema:
            type: string
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/data:
    get:
      summary: Get list of data classifications
      operationId: getDataClassifications
      tags:
      - Upload Data
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        200:
          description: A list of supported data classifications
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/data/{data_classification}:
    get:
      summary: Get list of data sources
      operationId: getDataSources
      tags:
      - Upload Data
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: data_classification
        in: path
        required: true
        type: string
        description: The classification of the data
      security:
      - JWT: []
      responses:
        200:
          description: A list of supported data sources
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
        400:
          description: Bad Request
  /workspaces/{workspaceId}/projects/{projectId}/data/{data_classification}/{data_source}/{export_type}/{export_version}:
    post:
      summary: Upload data to Deep Space from supported formats
      operationId: uploaddata
      tags:
      - Upload Data
      consumes:
      - multipart/form-data
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: data_classification
        in: path
        required: true
        type: string
        description: The classification of the data
      - name: data_source
        in: path
        required: true
        type: string
        description: The source of the data
      - name: export_type
        in: path
        required: true
        type: string
        description: The type of export
      - name: export_version
        in: path
        required: true
        type: string
        description: The version of the export
      - name: file
        in: formData
        required: true
        type: string
        description: The file to upload
      security:
      - JWT: []
      responses:
        200:
          description: crawlId of successfully loaded data
          schema:
            type: string
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
        400:
          description: Bad Request
        422:
          description: Unprocessable Entity
  /workspaces/{workspaceId}/projects/{projectId}/parameters:
    get:
      summary: Get parameters for project
      description: Get list of unique parameters from all parameter sets for a project
      operationId: getParameters
      tags:
      - Info
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        200:
          description: A list of parameters
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/milestone:
    get:
      tags:
      - Milestones
      summary: Get list of current milestones
      operationId: getMilestones
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        200:
          description: A list of current milestones
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      tags:
      - Milestones
      summary: Create new milestone
      operationId: postMilestone
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - milestone_name
          - milestone_date
          properties:
            filename:
              type: string
              description: The name of the milestone
            discipline:
              type: string
              description: The date of the milestone, expected format 'yyyy-mm-dd'
      security:
      - JWT: []
      responses:
        201:
          description: Successfully created new milestone
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/actions:
    post:
      tags:
      - Actions
      summary: Create new action
      operationId: createAction
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: name
        in: formData
        required: true
        type: string
        description: Name of the action
      - name: description
        in: formData
        required: false
        type: string
        description: Description of the action
      - name: dueDate
        in: formData
        required: false
        type: string
        description: Due date of the action, expected format 'yyyy-mm-dd'
      - name: rating
        in: formData
        required: false
        type: string
        description: Rating of the action - "Low", "Medium", "High"
      - name: currentApp
        in: formData
        required: false
        type: string
        description: App that the action was created from
      - name: attachments
        in: formData
        required: false
        type: string
        description: A JSON string representing a list of attachment objects. Each
          object must contain a `cde_id` property.
      security:
      - JWT: []
      responses:
        200:
          description: Successfully created new action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    patch:
      tags:
      - Actions
      summary: Update fields in existing action
      operationId: updateAction
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - action_id
          properties:
            action_id:
              type: integer
              description: id of existing action to update
      security:
      - JWT: []
      responses:
        200:
          description: Successfully updated action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    get:
      tags:
      - Actions
      summary: Get actions
      operationId: getActions
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: currentApp
        in: query
        required: false
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: Successfully created new action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/comments:
    get:
      tags:
      - Actions
      summary: Get comments for an action
      operationId: getActionComments
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: actionId
        in: path
        required: true
        type: integer
      - name: withAttachments
        in: query
        required: false
        type: boolean
      security:
      - JWT: []
      responses:
        200:
          description: Successfully got comments
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      tags:
      - Actions
      summary: Create comment for an action
      operationId: postActionComment
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: actionId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - comment
          properties:
            comment:
              type: string
              description: The comment to add
            attachments:
              type: array
              description: A list of attachment objects
              items:
                type: object
                required:
                - cde_id
                properties:
                  cde_id:
                    type: integer
                    description: CDE id corresponding to file
      security:
      - JWT: []
      responses:
        200:
          description: Successfully created comment
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}:
    get:
      tags:
      - Actions
      summary: Get an action
      operationId: getSingleAction
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: actionId
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        200:
          description: Successfully got action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    patch:
      tags:
      - Actions
      summary: Update fields in existing action
      operationId: updateSingleAction
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: actionId
        in: path
        required: true
        type: integer
      - name: body
        in: formData
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: Successfully updated action
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/watchers:
    get:
      tags:
      - Actions
      summary: Get watchers for an action
      operationId: getActionWatchers
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: actionId
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        200:
          description: Successfully got watchers
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      tags:
      - Actions
      summary: Add watcher to action
      operationId: postActionWatcher
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: actionId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - watcher
          properties:
            watcher:
              type: string
              description: The email of the watcher
      security:
      - JWT: []
      responses:
        200:
          description: Successfully added watcher
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/watchers/{watcherId}:
    delete:
      tags:
      - Actions
      summary: Remove watcher from action
      operationId: deleteActionWatcher
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: actionId
        in: path
        required: true
        type: integer
      - name: watcherId
        in: path
        required: true
        type: string
        description: email of watcher
      security:
      - JWT: []
      responses:
        200:
          description: Successfully removed watcher
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/comments/{commentId}:
    get:
      tags:
      - Actions
      summary: Get comment for an action
      operationId: getActionComment
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: actionId
        in: path
        required: true
        type: integer
      - name: commentId
        in: path
        required: true
        type: integer
      - name: withAttachments
        in: query
        required: false
        type: boolean
      security:
      - JWT: []
      responses:
        200:
          description: Successfully got comment
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/comments/{commentId}/attachments:
    post:
      tags:
      - Actions
      summary: Add attachments to action coment
      operationId: postActionCommentAttachments
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: actionId
        in: path
        required: true
        type: integer
      - name: commentId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - attachments
          properties:
            attachments:
              type: array
              description: A list of attachment objects
              items:
                type: object
                required:
                - cde_id
                properties:
                  cde_id:
                    type: integer
                    description: CDE id corresponding to file
      security:
      - JWT: []
      responses:
        200:
          description: Successfully added attachment
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/actions/{actionId}/attachments:
    get:
      tags:
      - Actions
      summary: Get attachments for an action
      operationId: getActionAttachments
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: actionId
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        200:
          description: Successfully got attachments
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      tags:
      - Actions
      summary: Add attachments to action
      operationId: postActionAttachments
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: actionId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - attachments
          properties:
            attachments:
              type: array
              description: A list of attachment objects
              items:
                type: object
                required:
                - cde_id
                properties:
                  cde_id:
                    type: integer
                    description: CDE id corresponding to file
      security:
      - JWT: []
      responses:
        200:
          description: Successfully got attachments
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/cde:
    post:
      tags:
      - Upload Data
      summary: Get signed urls for cde
      operationId: getCde
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - files
          properties:
            files:
              type: array
              description: A list of file objects
              items:
                type: object
                required:
                - filename
                - filetype
                properties:
                  filename:
                    type: string
                    description: The name of the file
                  filetype:
                    type: string
                    description: The type of the file
            cde_type:
              type: string
              description: The type of CDE upload
      security:
      - JWT: []
      responses:
        200:
          description: Successfully returns CDE urls
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/cde/process:
    post:
      tags:
      - Upload Data
      summary: Process files uploaded to CDE
      operationId: processCDE
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - files
          properties:
            files:
              type: array
              description: A list of file objects
              items:
                type: object
                required:
                - cde_id
                properties:
                  cde_id:
                    type: integer
                    description: The CDE ID of the file
      security:
      - JWT: []
      responses:
        200:
          description: Successfully processed files
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/teams:
    get:
      tags:
      - Teams
      summary: Get list of teams
      operationId: getTeams
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: includeDetails
        in: query
        required: false
        type: boolean
      security:
      - JWT: []
      responses:
        200:
          description: list of teams
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      tags:
      - Teams
      summary: Create a new team
      operationId: postTeam
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - discipline
          - pri_abbrev
          - company_id
          properties:
            discipline:
              type: string
              description: The name of the team
            pri_abbrev:
              type: string
              description: The abbreviation of the team
            company_id:
              type: integer
              description: The company id of the team (see GET /companies)
      security:
      - JWT: []
      responses:
        200:
          description: new team created
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/teams/bulk:
    post:
      tags:
      - Teams
      summary: Bulk edit teams with template
      operationId: postTeamsBulk
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: file
        in: formData
        required: true
        type: string
        description: The file to upload
      security:
      - JWT: []
      responses:
        200:
          description: updates complete
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/teams/{teamId}:
    patch:
      tags:
      - Teams
      summary: Edit a team
      operationId: patchTeam
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: teamId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            discipline:
              type: string
              description: The name of the team
            pri_abbrev:
              type: string
              description: The abbreviation of the team
            company_id:
              type: integer
              description: The company id of the team (see GET /companies)
      security:
      - JWT: []
      responses:
        200:
          description: team edited
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/jobs/{job_id}:
    post:
      tags:
      - Jobs
      summary: Start a new job
      operationId: startJob
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: job_id
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        202:
          description: Job started, returns job guid
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/jobs/{job_id}:
    post:
      tags:
      - Jobs
      summary: Start a new job at workpace-level
      operationId: startJobWorkspace
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: job_id
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        202:
          description: Job started, returns job guid
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /jobs/{job_id}:
    post:
      tags:
      - Jobs
      summary: Start a new job at global-level
      operationId: startJobGlobal
      parameters:
      - name: job_id
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        202:
          description: Job started, returns job guid
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/jobs:
    get:
      tags:
      - Jobs
      summary: Get supported jobs
      operationId: getJobs
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: app
        description: Get jobs associated with a specific app
        in: query
        required: false
        type: string
      security:
      - JWT: []
      responses:
        202:
          description: Job started, returns job guid
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/jobs/{job_guid}/status:
    get:
      tags:
      - Jobs
      summary: Get job status
      operationId: getJobStatus
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: job_guid
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        202:
          description: Returns job status
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects:
    get:
      summary: Get projects in a workspace
      operationId: getProjects
      tags:
      - Info
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: includeDetails
        in: query
        required: false
        type: boolean
        description: Include details of projects
      security:
      - JWT: []
      responses:
        200:
          description: Project details
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}:
    get:
      summary: Get project
      operationId: getProject
      tags:
      - Project
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: string
      - name: includeDetails
        in: query
        required: false
        type: boolean
        description: Include details of the project
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Insufficent permissions
        400:
          description: Bad Request
        500:
          description: Internal Server Error
    delete:
      summary: Archive a project
      operationId: archiveProject
      tags:
      - Project
      consumes:
      - application/json
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        201:
          description: Project successfully archived
        401:
          description: Insufficent permissions to archive project
        400:
          description: Bad Request
        500:
          description: Internal Server Error
    patch:
      summary: Update a project
      operationId: updateProject
      tags:
      - Project
      consumes:
      - application/json
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            project_name:
              type: string
              description: Name for the project
      security:
      - JWT: []
      responses:
        201:
          description: Project successfully archived
        401:
          description: Insufficent permissions to archive project
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/users:
    get:
      summary: Get users in a project
      description: Returns all users and user details for a project
      operationId: getProjectUsers
      tags:
      - Users
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      summary: Invite user to a project
      description: Creates a user if not already exista and invites to project
      operationId: postProjectUsers
      tags:
      - Users
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - email
          - name
          - team_bim_id
          properties:
            email:
              type: string
              description: The email of the user
            name:
              type: string
              description: The name of the user like First Last
            team_bim_id:
              type: integer
              description: The team id to add the user to on the project
            isProjectManager:
              type: boolean
              description: bool indicating whether the user is a project manager (default
                false)
            isProjectViewer:
              type: boolean
              description: bool indicating whether the user is a project viewer (default
                false)
            isRevitUsers:
              type: boolean
              description: bool indicating whether the user is a revit user (default
                false)
            isWorkspaceManager:
              type: boolean
              description: bool indicating whether the user is a workspace manager
                (default false)
            isWorkspaceDashboardViewer:
              type: boolean
              description: bool indicating whether the user is a workspace viewer
                (default false)
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/users/{userId}:
    get:
      summary: Get user in a project
      description: Returns user and details for specified project
      operationId: getProjectUser
      tags:
      - Users
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: userId
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    patch:
      summary: Edit a user in a project
      description: Edit project-level attributes of a user
      operationId: patchProjectUsers
      tags:
      - Users
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: userId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            team_bim_id:
              type: integer
              description: The team id to add the user to on the project
            isProjectManager:
              type: boolean
              description: bool indicating whether the user is a project manager (default
                false)
            isProjectViewer:
              type: boolean
              description: bool indicating whether the user is a project viewer (default
                false)
            isRevitUsers:
              type: boolean
              description: bool indicating whether the user is a revit user (default
                false)
            isProjectTeam:
              type: boolean
              description: bool indicating whether the user is a project team member
                (default false)
            name:
              type: string
              description: The name of the user like First Last
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/users:
    get:
      summary: Get users in a workspaces
      description: Returns all users and user details for a workspace
      operationId: getWorkspaceUsers
      tags:
      - Users
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      summary: Invite user to a workspace
      description: Creates user if not already exista and invites to workspace
      operationId: postWorkspaceUsers
      tags:
      - Users
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - email
          - name
          properties:
            email:
              type: string
              description: The email of the user
            name:
              type: string
              description: The name of the user like First Last
            isWorkspaceManager:
              type: boolean
              description: bool indicating whether the user is a workspace manager
                (default false)
            isWorkspaceDashboardViewer:
              type: boolean
              description: bool indicating whether the user is a workspace viewer
                (default false)
            projects:
              type: array
              description: array of project to add the user to in workspace
              items:
                type: object
                required:
                - project_id
                - team_bim_id
                properties:
                  project_id:
                    type: integer
                    description: The project id to add the user to
                  team_bim_id:
                    type: integer
                    description: The team id to add the user to on the project
                  isProjectManager:
                    type: boolean
                    description: bool indicating whether the user is a project manager
                      (default false)
                  isProjectViewer:
                    type: boolean
                    description: bool indicating whether the user is a project viewer
                      (default false)
                  isRevitUser:
                    type: boolean
                    description: bool indicating whether the user is a revit user
                      (default false)
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/users/{userId}:
    patch:
      summary: Edit a user in a workspace
      description: Edit workspace-level attributes of a user
      operationId: patchWorkspaceUsers
      tags:
      - Users
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: userId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            isWorkspaceManager:
              type: boolean
              description: bool indicating whether the user isWorkspaceManager (default
                false)
            isWorkspaceDashboardViewer:
              type: boolean
              description: bool indicating whether the user isWorkspaceDashboardViewer
                (default false)
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      summary: Resend invite email to user in workspace
      operationId: postWorkspaceUserId
      tags:
      - Users
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: userId
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/companies:
    get:
      summary: Get companies in a workspaces
      description: Returns all companies for a workspace
      operationId: getWorkspaceCompanies
      tags:
      - Companies
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    post:
      summary: Create company in a workspaces
      description: Creates a new company in a workspace. Requires workspace manager
        permissions
      operationId: postWorkspaceCompanies
      tags:
      - Companies
      consumes:
      - application/json
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - company_name
          - company_abbreviation
          properties:
            company_name:
              type: string
              description: The name of the company
            company_abbreviation:
              type: string
              description: The abbreviation of the company name
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/companies/{companyId}:
    patch:
      summary: Update a company
      operationId: patchWorkspaceCompanies
      tags:
      - Companies
      consumes:
      - application/json
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: companyId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          properties:
            company_name:
              type: string
              description: The name of the company
            company_abbreviation:
              type: string
              description: The abbreviation of the company name
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /migrations/{migrationId}:
    post:
      summary: Run a schema migration
      operationId: runMigration
      x-min-permissions: admin
      tags:
      - Migrations
      parameters:
      - name: migrationId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - region
          - workspace
          - functiondata
          properties:
            region:
              type: string
              description: The region of the workspace
            workspace:
              type: string
              description: The workspace to run the migration on
            functiondata:
              type: object
              description: The data to pass to the migration function (see migration
                documentation)
      security:
      - JWT: []
      responses:
        207:
          description: Migration ran, see response for details
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/tokens/{tokenId}:
    get:
      summary: Get a token for a project
      operationId: getProjectTokens
      tags:
      - Tokens
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: tokenId
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/powerbi/apps/{contentPack}:
    post:
      summary: Deploy power bi apps by content pack
      operationId: postPowerBiApps
      x-min-permissions: admin
      tags:
      - Power BI
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: contentPack
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        202:
          description: App deployment initiated
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/powerbi/filters:
    get:
      summary: Get filters for power bi
      operationId: getPbiFilters
      tags:
      - Power BI
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        200:
          description: Filters for pbi
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/powerbi/deploy/apps:
    post:
      summary: Deploy power bi app
      operationId: deployPbiApp
      x-min-permissions: admin
      tags:
      - Power BI
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - id_dashboard_deployment_job
          - content_pack
          properties:
            id_dashboard_deployment_job:
              type: integer
            content_pack:
              type: string
      security:
      - JWT: []
      responses:
        200:
          description: Deployment initiated
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/powerbi/syncback/apps/{appName}:
    post:
      summary: Run syncback for power bi app
      operationId: syncbackPbiApp
      tags:
      - Power BI
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: appName
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: Syncback complete
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/powerbi/refresh/apps/{appName}:
    post:
      summary: Refresh Power BI app in project
      operationId: refreshPowerBiApp
      tags:
      - Power BI
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: appName
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: App refresh initiated
        204:
          description: App refresh not iniated for some reason (eg. already in progress)
        404:
          description: App not found in project
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/powerbi/embedded/apps/{appName}:
    get:
      summary: Get PBI Embedded App
      operationId: getEmbeddedPbiApp
      tags:
      - Power BI
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: appName
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: App returned
        404:
          description: App not found in project
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/powerbi/refresh/apps:
    get:
      summary: Get power bi apps & latest refresh dates in a project
      operationId: getPowerBiApps
      tags:
      - Power BI
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/powerbi:
    post:
      summary: Create a new power bi workspace
      operationId: postPowerBiWorkspace
      x-min-permissions: admin
      tags:
      - Power BI
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/outseta:
    post:
      summary: Create an outseta account for a project
      operationId: postProjectOutseta
      x-min-permissions: admin
      tags:
      - Outseta
      consumes:
      - application/json
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - primary_contact_email
          - billing_stage
          - project_weekly_notifications
          - ds_license_type
          properties:
            primary_contact_email:
              type: string
              description: Primary contact (Outseta) for the project
            billing_stage:
              type: string
              description: The billing stage of the project (Outseta)
            project_weekly_notifications:
              type: object
              description: dictionary of days of the week as bools
              properties:
                Monday:
                  type: boolean
                Tuesday:
                  type: boolean
                Wednesday:
                  type: boolean
                Thursday:
                  type: boolean
                Friday:
                  type: boolean
                Saturday:
                  type: boolean
                Sunday:
                  type: boolean
            ds_license_type:
              type: string
              description: The license type of the project
      security:
      - JWT: []
      responses:
        201:
          description: Account successfully created
        401:
          description: Insufficent permissions
        400:
          description: Bad Request
        500:
          description: Internal Server Error
    patch:
      summary: Update an outseta account
      operationId: patchProjectOutseta
      x-min-permissions: admin
      tags:
      - Outseta
      consumes:
      - application/json
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - webflow_collection_id
          properties:
            webflow_collection_id:
              type: string
              description: The webflow collection id
      security:
      - JWT: []
      responses:
        200:
          description: Account successfully updated
        401:
          description: Insufficent permissions
        400:
          description: Bad Request
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/integrations:
    get:
      summary: Get integrations on a project
      operationId: getProjectIntegrations
      x-min-permissions: isRevitUser
      tags:
      - External Integrations
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      security:
      - JWT: []
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/integrations/{integrationId}:
    post:
      summary: Configure an integration on a project
      operationId: postProjectIntegration
      x-min-permissions: isRevitUser
      tags:
      - External Integrations
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: integrationId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          description: json object containing configuration values, differs depending
            on integration
      security:
      - JWT: []
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    patch:
      summary: Update an integration configuration on a project
      operationId: patchProjectIntegration
      x-min-permissions: isRevitUser
      tags:
      - External Integrations
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: integrationId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - mappingFieldValue1
          - mappingFieldValue2
          properties:
            mappingFieldValue1:
              type: string
              description: The first mapping field value
            mappingFieldValue2:
              type: string
              description: The first mapping field value
      security:
      - JWT: []
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
    get:
      summary: Get mapping fields for an integration
      operationId: getProjectIntegrationFields
      x-min-permissions: isRevitUser
      tags:
      - External Integrations
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: integrationId
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/integrations/{integrationId}/refresh:
    post:
      summary: Refresh access token for an integration on a project
      operationId: postProjectIntegrationRefresh
      x-min-permissions: isRevitUser
      tags:
      - External Integrations
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: integrationId
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/integrations/{integrationId}/sync:
    post:
      summary: Sync data for an integration on a project
      operationId: postProjectIntegrationSync
      x-min-permissions: isRevitUser
      tags:
      - External Integrations
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: integrationId
        in: path
        required: true
        type: string
      security:
      - JWT: []
      responses:
        200:
          description: Successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /users:
    post:
      summary: Create user in Outseta
      description: Creates a user if not already exists in Outseta only
      operationId: postOutsetauser
      x-min-permissions: admin
      tags:
      - Users
      parameters:
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - email
          - name
          properties:
            email:
              type: string
              description: The email of the user
            name:
              type: string
              description: The name of the user like First Last
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
  /workspaces/{workspaceId}/projects/{projectId}/correspondence:
    post:
      summary: Log a correspondence in Deep Space
      operationId: logCorrespondence
      tags:
      - Correspondence Logging
      parameters:
      - name: workspaceId
        in: path
        required: true
        type: string
      - name: projectId
        in: path
        required: true
        type: integer
      - name: body
        in: body
        required: true
        schema:
          type: object
          required:
          - subject
          - date_sent
          - text_content
          - html_content
          - sender_email
          - sender_name
          - recipients
          properties:
            subject:
              type: string
              description: The email subject
            date_sent:
              type: string
              description: datetime in ISO format
            text_content:
              type: string
              description: The text content of the email
            html_content:
              type: string
              description: The html content of the email
            sender_email:
              type: string
              description: The email of the sender
            sender_name:
              type: string
              description: The name of the sender
            attachments:
              type: array
              description: array of attachment objects
              items:
                type: object
                required:
                - cde_id
                properties:
                  cde_id:
                    type: integer
                    description: The CDE ID corresponding to attachment
            recipients:
              type: array
              description: array of recipient objects
              items:
                type: object
                required:
                - email
                - name
                - type
                properties:
                  email:
                    type: string
                    description: The email of the recipient
                  name:
                    type: string
                    description: The name of the recipient
                  type:
                    type: string
                    description: The type of recipient ('to', 'cc', 'bcc')
      security:
      - JWT: []
      responses:
        200:
          description: A successful response
        401:
          description: Unauthorized
        500:
          description: Internal Server Error
